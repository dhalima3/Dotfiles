// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "cmd+d",
    "command": "git.openFile"
    // "command": "git.openChange",
    // "when": "scmRepository"
  },
  {
    "key": "ctrl+cmd+d",
    "command": "workbench.action.debug.run",
    "when": "!inDebugMode && !terminalFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-workbench.action.debug.run",
    "when": "!inDebugMode && !terminalFocus"
  },
  {
    "key": "cmd+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "alt+cmd+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+9",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorTextFocus && !editorFocus && !markersNavigationVisible"
    // "when": "explorerViewletFocus && filesExplorerFocus && explorerResourceIsFolder"
  },
  {
    "key": "escape",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "escape",
    "command": "closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  // Start of untested escape keybindings
  // {
  //     "key": "escape",
  //     "command": "cancelRenameInput",
  //     "when": "editorFocus && renameInputVisible"
  // },
  // {
  //     "key": "escape",
  //     "command": "cancelSelection",
  //     "when": "editorHasSelection && textInputFocus"
  // },
  // {
  //     "key": "escape",
  //     "command": "closeAccessibilityHelp",
  //     "when": "accessibilityHelpWidgetVisible && editorFocus"
  // },
  // {
  //     "key": "escape",
  //     "command": "closeBreakpointWidget",
  //     "when": "breakpointWidgetVisible && textInputFocus"
  // },
  // {
  //     "key": "escape",
  //     "command": "closeFindWidget",
  //     "when": "editorFocus && findWidgetVisible"
  // },
  // {
  //     "key": "escape",
  //     "command": "closeParameterHints",
  //     "when": "editorTextFocus && parameterHintsVisible"
  // },
  // {
  //     "key": "escape",
  //     "command": "closeReferenceSearch",
  //     "when": "referenceSearchVisible && !config.editor.stablePeek"
  // },
  // {
  //     "key": "escape",
  //     "command": "closeReferenceSearchEditor",
  //     "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  // },
  // {
  //     "key": "escape",
  //     "command": "closeReviewPanel",
  //     "when": "reviewPanelVisible"
  // },
  // {
  //     "key": "escape",
  //     "command": "hideSuggestWidget",
  //     "when": "suggestWidgetVisible && textInputFocus"
  // },
  // {
  //     "key": "escape",
  //     "command": "leaveSnippet",
  //     "when": "editorTextFocus && inSnippetMode"
  // },
  // {
  //     "key": "escape",
  //     "command": "removeSecondaryCursors",
  //     "when": "editorHasMultipleSelections && textInputFocus"
  // },
  // {
  //     "key": "escape",
  //     "command": "workbench.action.closeQuickOpen",
  //     "when": "inQuickOpen"
  // },
  {
    "key": "cmd+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+cmd+w",
    "command": "-workbench.action.toggleTabsVisibility"
  },
  {
    "key": "ctrl+cmd+w",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "shift+cmd+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "cmd+3",
    "command": "workbench.view.search",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+h",
    "command": "gitlens.showQuickFileHistory",
    "when": "gitlens:enabled && gitlens:keymap == 'alternate'"
  },
  {
    "key": "alt+h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "gitlens:enabled && gitlens:keymap == 'alternate'"
  },
  {
    "key": "ctrl+cmd+h",
    "command": "git.viewFileHistory"
  },
  {
    "key": "ctrl+cmd+o",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "shift+cmd+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "shift+cmd+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile",
    "when": "!editorTextFocus"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+k o",
    "command": "-workbench.action.files.showOpenedFileInNewWindow"
  },
  {
    "key": "cmd+0",
    "command": "workbench.actions.view.problems"
  },
  // {
  //     "key": "shift+escape",
  //     "command": "-workbench.action.terminal.hideFindWidget",
  //     "when": "terminalFindWidgetVisible && terminalFocus"
  // },
  {
    "key": "alt+cmd+k",
    "command": "git.checkout"
  },
  {
    "key": "alt+cmd+g b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && gitlens:keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "cmd+f12",
    "command": "outline.focus",
    "when": "editorTextFocus"
  },
  // {
  //     "key": "cmd+k",
  //     "command": "git.commitStaged",
  //     "when": "!inDebugMode && !terminalFocus"
  // },
  {
    "key": "ctrl+alt+s",
    "command": "git.stageSelectedRanges",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k",
    "command": "-git.commitAll",
    "when": "!inDebugMode && !terminalFocus"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "cmd+t",
    "command": "-git.sync"
  },
  {
    "key": "cmd+t",
    "command": "git.pullRebase"
  },
  // {
  //     "key": "cmd+t",
  //     "command": "-workbench.action.git.sync"
  // },
  {
    "key": "alt+cmd+z",
    "command": "git.revertSelectedRanges",
    "when": "!dirtyDiffVisible"
  },
  {
    "key": "alt+cmd+a",
    "command": "git.stageChange",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "alt+cmd+z",
    "command": "git.revertChange",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "cmd+shift+z",
    "command": "redo",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+a",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "shift+cmd+u",
    "command": "-workbench.action.output.toggleOutput"
  },
  {
    "key": "shift+cmd+u",
    "command": "gitlens.showQuickStashList"
  },
  {
    "key": "shift+cmd+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+9",
    // "command": "git.viewHistory"
    "command": "gitlens.showLineHistoryView"
  },
  {
    "key": "alt+9",
    "command": "git.commit.view.hide",
    "when": "git.commit.view.show"
  },
  {
    "key": "alt+9",
    "command": "git.commit.view.show",
    "when": "!git.commit.view.show"
  },
  {
    "key": "cmd+f2",
    "command": "-editor.action.changeAll",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+f2",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  // Go to next/previous change
  {
    "key": "f7",
    "command": "editor.action.dirtydiff.next",
    "when": "editorTextFocus && !inDebugMode"
  },
  {
    "key": "ctrl+shift+alt+down",
    "command": "-editor.action.dirtydiff.next",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+down",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    // "key": "ctrl+shift+alt+j",
    "key": "alt+j",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+f7",
    "command": "editor.action.dirtydiff.previous",
    "when": "editorTextFocus && !inDebugMode"
  },
  {
    "key": "ctrl+shift+alt+up",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    // "key": "ctrl+shift+alt+k",
    "key": "alt+k",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+up",
    "command": "-editor.action.dirtydiff.previous",
    "when": "editorTextFocus"
  },

  // START vscode vim keybindings
  // May not need these shortcuts anymore once vscodevim supports horizontal splitting
  {
    "key": "ctrl+w s",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+w v",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "ctrl+w q",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+w j",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+w k",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+w ctrl+w",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+w w",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+w shift+L",
    "command": "workbench.action.moveEditorToRightGroup"
  },
  {
    "key": "ctrl+w shift+H",
    "command": "workbench.action.moveEditorToLeftGroup"
  },
  {
    "key": "ctrl+w shift+J",
    "command": "workbench.action.moveEditorToBelowGroup"
  },
  {
    "key": "ctrl+w shift+K",
    "command": "workbench.action.moveEditorToAboveGroup"
  },
  {
    "key": "ctrl+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "f4",
    "command": "-editor.action.goToDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "key": "cmd+shift+f12",
    "command": "macros.maximizeEditorHidePanels"
  },
  {
    "key": "ctrl+r",
    "command": "python.execInTerminal",
    "when": "editorFocus && editorLangId == 'python'"
  },
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+2",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "cmd+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
]